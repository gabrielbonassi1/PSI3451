|base_control
clk => fsm_main:main.clk
clk => counter_trigger:cnt_prep.clk
clk => counter_trigger:cnt_strat.clk
clk => fsm_init:init.clk
clk => fsm_guru:guru.clk
res => fsm_main:main.res
res => counter_trigger:cnt_prep.res
res => counter_trigger:cnt_strat.res
res => fsm_init:init.res
res => fsm_guru:guru.res
en_disc => fsm_main:main.en_disc
cnt_guru_rdy => fsm_guru:guru.cnt_guru_rdy
dp_2_ctrl.ovf_of_y => fsm_init:init.ovf_of_y
dp_2_ctrl.end_of_guru => fsm_main:main.end_of_guru
dp_2_ctrl.end_of_guru => fsm_guru:guru.end_of_guru
disc_2_base.end_of_disc => fsm_main:main.end_of_disc
ref_2_base.go_guru => fsm_guru:guru.go_guru
ref_2_base.duo_formed => fsm_main:main.duo_formed
ref_2_base.duo_formed => fsm_guru:guru.duo_formed
en_cnt_step << fsm_main:main.en_cnt_step
start_step << fsm_main:main.fsm_s_start
ctrl_2_dp.cg_sel.DUO << ctrl_2_dp.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_dp.cg_sel.DISC << ctrl_2_dp.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_dp.cg_sel.GURU << ctrl_2_dp.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_dp.cg_sel.BLANK << ctrl_2_dp.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_dp.rb_out_sel.DISC_PREV_OUT << ctrl_2_dp.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_dp.rb_out_sel.DISC_OUT << ctrl_2_dp.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_dp.rb_out_sel.GURU_PREV_OUT << ctrl_2_dp.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_dp.rb_out_sel.GURU_OUT << ctrl_2_dp.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_dp.rb_out_sel.INIT_OUT << ctrl_2_dp.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_dp.rb_PRE_GURU_en << ctrl_2_dp.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_dp.rb_GURU_en << ctrl_2_dp.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_dp.rb_INIT_en << ctrl_2_dp.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_dp.alu_ctrl << ctrl_2_dp.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_dp.ng_rand_zero << ctrl_2_dp.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_dp.ng_cte_incr << ctrl_2_dp.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_mem.cg_sel.DUO << ctrl_2_mem.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_mem.cg_sel.DISC << ctrl_2_mem.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_mem.cg_sel.GURU << ctrl_2_mem.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_mem.cg_sel.BLANK << ctrl_2_mem.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_mem.data_a[0] << ctrl_2_mem.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_mem.data_a[1] << ctrl_2_mem.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_mem.data_a[2] << ctrl_2_mem.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_mem.data_a[3] << ctrl_2_mem.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_mem.data_a[4] << ctrl_2_mem.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_mem.data_a[5] << ctrl_2_mem.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_mem.data_a[6] << ctrl_2_mem.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_mem.data_a[7] << ctrl_2_mem.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_mem.mem_wr_en << ctrl_2_mem.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_mem.mem_a_addr[0] << ctrl_2_mem.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_mem.mem_a_addr[1] << ctrl_2_mem.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_mem.mem_a_addr[2] << ctrl_2_mem.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_mem.mem_a_addr[3] << ctrl_2_mem.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_mem.mem_a_addr[4] << ctrl_2_mem.DB_MAX_OUTPUT_PORT_TYPE
ctrl_2_mem.mem_a_addr[5] << ctrl_2_mem.DB_MAX_OUTPUT_PORT_TYPE


|base_control|fsm_main:main
clk => STATE~1.DATAIN
res => STATE.OUTPUTSELECT
res => STATE.OUTPUTSELECT
res => STATE.OUTPUTSELECT
res => STATE.OUTPUTSELECT
res => STATE.OUTPUTSELECT
res => STATE.OUTPUTSELECT
en_disc => upd_next_state.IN1
en_disc => upd_next_state.IN1
en_disc => upd_next_state.IN0
fsm_i_done => Selector1.IN5
fsm_i_done => NEXT_STATE.INIT_ACTIVATION.DATAB
end_of_guru => upd_next_state.IN0
end_of_guru => upd_next_state.IN1
end_of_disc => upd_next_state.IN1
duo_formed => upd_next_state.IN1
duo_formed => upd_next_state.IN1
duo_formed => upd_next_state.IN1
cnt_prepare_f => NEXT_STATE.STEP_ACTIVATION.DATAB
cnt_prepare_f => Selector1.IN2
cnt_start_f => Selector0.IN3
cnt_start_f => Selector2.IN2
con_sel <= con_sel.DB_MAX_OUTPUT_PORT_TYPE
en_cnt_step <= en_cnt_step.DB_MAX_OUTPUT_PORT_TYPE
cnt_prepare_i <= cnt_prepare_i.DB_MAX_OUTPUT_PORT_TYPE
cnt_start_i <= cnt_start_i.DB_MAX_OUTPUT_PORT_TYPE
fsm_i_start <= fsm_i_start.DB_MAX_OUTPUT_PORT_TYPE
fsm_s_start <= fsm_s_start.DB_MAX_OUTPUT_PORT_TYPE


|base_control|counter_trigger:cnt_prep
clk => cnt_s[0].CLK
clk => cnt_s[1].CLK
clk => cnt_s[2].CLK
clk => cnt_s[3].CLK
clk => cnt_s[4].CLK
clk => cnt_s[5].CLK
clk => cnt_s[6].CLK
clk => cnt_s[7].CLK
clk => cnt_s[8].CLK
clk => cnt_s[9].CLK
clk => cnt_s[10].CLK
clk => cnt_s[11].CLK
clk => cnt_s[12].CLK
clk => cnt_s[13].CLK
clk => cnt_s[14].CLK
clk => cnt_s[15].CLK
clk => cnt_s[16].CLK
clk => cnt_s[17].CLK
clk => cnt_s[18].CLK
clk => cnt_s[19].CLK
clk => cnt_s[20].CLK
clk => cnt_s[21].CLK
clk => cnt_s[22].CLK
clk => cnt_s[23].CLK
clk => cnt_s[24].CLK
clk => cnt_s[25].CLK
clk => cnt_s[26].CLK
clk => cnt_s[27].CLK
clk => cnt_s[28].CLK
clk => cnt_s[29].CLK
clk => cnt_s[30].CLK
clk => cnt_s[31].CLK
clk => STATE.CLK
res => STATE.OUTPUTSELECT
trigger => NEXT_STATE.DATAB
cnt_rdy <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|base_control|counter_trigger:cnt_strat
clk => cnt_s[0].CLK
clk => cnt_s[1].CLK
clk => cnt_s[2].CLK
clk => cnt_s[3].CLK
clk => cnt_s[4].CLK
clk => cnt_s[5].CLK
clk => cnt_s[6].CLK
clk => cnt_s[7].CLK
clk => cnt_s[8].CLK
clk => cnt_s[9].CLK
clk => cnt_s[10].CLK
clk => cnt_s[11].CLK
clk => cnt_s[12].CLK
clk => cnt_s[13].CLK
clk => cnt_s[14].CLK
clk => cnt_s[15].CLK
clk => cnt_s[16].CLK
clk => cnt_s[17].CLK
clk => cnt_s[18].CLK
clk => cnt_s[19].CLK
clk => cnt_s[20].CLK
clk => cnt_s[21].CLK
clk => cnt_s[22].CLK
clk => cnt_s[23].CLK
clk => cnt_s[24].CLK
clk => cnt_s[25].CLK
clk => cnt_s[26].CLK
clk => cnt_s[27].CLK
clk => cnt_s[28].CLK
clk => cnt_s[29].CLK
clk => cnt_s[30].CLK
clk => cnt_s[31].CLK
clk => STATE.CLK
res => STATE.OUTPUTSELECT
trigger => NEXT_STATE.DATAB
cnt_rdy <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|base_control|fsm_init:init
clk => STATE~1.DATAIN
res => STATE.OUTPUTSELECT
res => STATE.OUTPUTSELECT
res => STATE.OUTPUTSELECT
res => STATE.OUTPUTSELECT
start_init => NEXT_STATE.ZERO.DATAB
start_init => Selector0.IN2
ovf_of_y => NEXT_STATE.DONE.DATAB
ovf_of_y => Selector1.IN2
done_init <= done_init.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.cg_sel.DUO <= <GND>
flags_2_dp.cg_sel.DISC <= <GND>
flags_2_dp.cg_sel.GURU <= <GND>
flags_2_dp.cg_sel.BLANK <= <VCC>
flags_2_dp.rb_out_sel.DISC_PREV_OUT <= flags_2_dp.rb_out_sel.DISC_PREV_OUT.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.rb_out_sel.DISC_OUT <= flags_2_dp.rb_out_sel.DISC_OUT.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.rb_out_sel.GURU_PREV_OUT <= flags_2_dp.rb_out_sel.GURU_PREV_OUT.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.rb_out_sel.GURU_OUT <= flags_2_dp.rb_out_sel.GURU_OUT.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.rb_out_sel.INIT_OUT <= flags_2_dp.rb_out_sel.INIT_OUT.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.rb_PRE_GURU_en <= <GND>
flags_2_dp.rb_GURU_en <= <GND>
flags_2_dp.rb_INIT_en <= flags_2_dp.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.alu_ctrl <= flags_2_dp.alu_ctrl.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.ng_rand_zero <= flags_2_dp.ng_rand_zero.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.ng_cte_incr <= flags_2_dp.DB_MAX_OUTPUT_PORT_TYPE
flags_2_mem.cg_sel.DUO <= flags_2_mem.cg_sel.DUO.DB_MAX_OUTPUT_PORT_TYPE
flags_2_mem.cg_sel.DISC <= flags_2_mem.cg_sel.DISC.DB_MAX_OUTPUT_PORT_TYPE
flags_2_mem.cg_sel.GURU <= flags_2_mem.cg_sel.GURU.DB_MAX_OUTPUT_PORT_TYPE
flags_2_mem.cg_sel.BLANK <= flags_2_mem.cg_sel.BLANK.DB_MAX_OUTPUT_PORT_TYPE
flags_2_mem.data_a[0] <= <GND>
flags_2_mem.data_a[1] <= <GND>
flags_2_mem.data_a[2] <= <GND>
flags_2_mem.data_a[3] <= <GND>
flags_2_mem.data_a[4] <= <GND>
flags_2_mem.data_a[5] <= <GND>
flags_2_mem.data_a[6] <= <GND>
flags_2_mem.data_a[7] <= <GND>
flags_2_mem.mem_wr_en <= flags_2_dp.DB_MAX_OUTPUT_PORT_TYPE
flags_2_mem.mem_a_addr[0] <= <GND>
flags_2_mem.mem_a_addr[1] <= <GND>
flags_2_mem.mem_a_addr[2] <= <GND>
flags_2_mem.mem_a_addr[3] <= <GND>
flags_2_mem.mem_a_addr[4] <= <GND>
flags_2_mem.mem_a_addr[5] <= <GND>


|base_control|fsm_guru:guru
clk => STATE~1.DATAIN
res => STATE.OUTPUTSELECT
res => STATE.OUTPUTSELECT
res => STATE.OUTPUTSELECT
res => STATE.OUTPUTSELECT
res => STATE.OUTPUTSELECT
res => STATE.OUTPUTSELECT
res => STATE.OUTPUTSELECT
res => STATE.OUTPUTSELECT
res => STATE.OUTPUTSELECT
res => STATE.OUTPUTSELECT
res => STATE.OUTPUTSELECT
fsm_sg_start => NEXT_STATE.RAND.DATAB
fsm_sg_start => Selector0.IN2
end_of_guru => upd_next_state.IN0
end_of_guru => upd_next_state.IN0
cnt_guru_rdy => NEXT_STATE.INCR.DATAB
cnt_guru_rdy => Selector1.IN2
duo_formed => NEXT_STATE.WRITE_DUO.DATAB
duo_formed => NEXT_STATE.WRITE_GURU.DATAB
go_guru => upd_next_state.IN1
go_guru => upd_next_state.IN1
flags_2_dp.cg_sel.DUO <= flags_2_dp.cg_sel.DUO.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.cg_sel.DISC <= flags_2_dp.cg_sel.DISC.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.cg_sel.GURU <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.cg_sel.BLANK <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.rb_out_sel.DISC_PREV_OUT <= flags_2_dp.rb_out_sel.DISC_PREV_OUT.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.rb_out_sel.DISC_OUT <= flags_2_dp.rb_out_sel.DISC_OUT.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.rb_out_sel.GURU_PREV_OUT <= flags_2_dp.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.rb_out_sel.GURU_OUT <= flags_2_dp.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.rb_out_sel.INIT_OUT <= flags_2_dp.rb_out_sel.INIT_OUT.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.rb_PRE_GURU_en <= flags_2_dp.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.rb_GURU_en <= flags_2_dp.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.rb_INIT_en <= <GND>
flags_2_dp.alu_ctrl <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
flags_2_dp.ng_rand_zero <= <GND>
flags_2_dp.ng_cte_incr <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
flags_2_mem.cg_sel.DUO <= flags_2_mem.cg_sel.DUO.DB_MAX_OUTPUT_PORT_TYPE
flags_2_mem.cg_sel.DISC <= flags_2_mem.cg_sel.DISC.DB_MAX_OUTPUT_PORT_TYPE
flags_2_mem.cg_sel.GURU <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
flags_2_mem.cg_sel.BLANK <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
flags_2_mem.data_a[0] <= <GND>
flags_2_mem.data_a[1] <= <GND>
flags_2_mem.data_a[2] <= <GND>
flags_2_mem.data_a[3] <= <GND>
flags_2_mem.data_a[4] <= <GND>
flags_2_mem.data_a[5] <= <GND>
flags_2_mem.data_a[6] <= <GND>
flags_2_mem.data_a[7] <= <GND>
flags_2_mem.mem_wr_en <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
flags_2_mem.mem_a_addr[0] <= <GND>
flags_2_mem.mem_a_addr[1] <= <GND>
flags_2_mem.mem_a_addr[2] <= <GND>
flags_2_mem.mem_a_addr[3] <= <GND>
flags_2_mem.mem_a_addr[4] <= <GND>
flags_2_mem.mem_a_addr[5] <= <GND>


